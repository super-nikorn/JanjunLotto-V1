import { db } from "../api/firebase-config.js";
import {
  collection,
  query,
  getDocs,
  setDoc,
  doc,
} from "https://www.gstatic.com/firebasejs/10.12.0/firebase-firestore.js";

function formatDateYYMMDD(date) {
  const yy = String(date.getFullYear()).slice(2);
  const mm = String(date.getMonth() + 1).padStart(2, "0");
  const dd = String(date.getDate()).padStart(2, "0");
  return `${yy}${mm}${dd}`;
}

function generateNewTicketId(todayDocs, prefix) {
  const newIndex = todayDocs.length + 1;
  return `${prefix}${String(newIndex).padStart(3, "0")}`;
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô saveTicket ‡πÅ‡∏Ñ‡πà‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏•‡πâ‡∏ß‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å
export async function saveTicket({ name, number, type, amount }) {
  const now = new Date();
  const dateStr = formatDateYYMMDD(now);
  const prefix = `ticket${dateStr}`;

  const q = query(collection(db, "lottery"));
  const snapshot = await getDocs(q);
  const todayDocs = snapshot.docs.filter((doc) => doc.id.startsWith(prefix));
  const id = generateNewTicketId(todayDocs, prefix);

  await setDoc(doc(db, "lottery", id), {
    name,
    number,
    type,
    amount,
    date: now.toISOString().split("T")[0], // YYYY-MM-DD
  });
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ submit form
export function setupAddTicketForm() {
  const form = document.getElementById("addTicketForm");
  const dialogaddTk = document.getElementById("addTicketDialog");
  const reverseCheckbox = document.getElementById("reverseNumber"); // üëà ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡∏ô‡∏µ‡πâ


  form.addEventListener("submit", async (e) => {
    e.preventDefault();

    const name = form.name.value.trim();
    const number = form.number.value.trim();
    const type = form.type.value;
    const amount = Number(form.amount.value);
    const shouldReverse = reverseCheckbox?.checked;

    if (!name || !number || !type || !amount) {
      alert("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô");
      return;
    }

    try {
      form.querySelector('button[type="submit"]').disabled = true;
      await saveTicket({ name, number, type, amount });

      if (shouldReverse && number.length === 2 && number[0] !== number[1]) {
        const reversed = number.split("").reverse().join("");
        await saveTicket({ name, number: reversed, type, amount });
      }

      alert("‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÇ‡∏û‡∏¢‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢!");
      form.reset();
      dialogaddTk.close();

      // ‡∏£‡∏µ‡πÇ‡∏´‡∏•‡∏î‡∏´‡∏£‡∏∑‡∏≠‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏ö‡∏ö‡∏≠‡∏∑‡πà‡∏ô‡∏Å‡πá‡πÑ‡∏î‡πâ
      window.location.reload();
    } catch (err) {
      alert("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: " + err.message);
    } finally {
      form.querySelector('button[type="submit"]').disabled = false;
    }
  });
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ form ‡πÄ‡∏•‡∏Ç 2-3 ‡∏ï‡∏±‡∏ß (‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÄ‡∏î‡∏¥‡∏°)
export function setupDigitTypeForm() {
  const digitRadios = document.querySelectorAll('input[name="digitType"]');
  const numberInput = document.getElementById("numberInput");
  const typeSelect = document.getElementById("typeSelect");
  const reverseCheckbox = document.getElementById("reverseNumber")
  if (!digitRadios.length || !numberInput || !typeSelect || !reverseCheckbox) {
    console.error("Element not found for setupDigitTypeForm");
    return;
  }

  const typeOptions = {
    2: ["‡∏ö‡∏ô", "‡∏•‡πà‡∏≤‡∏á", "‡∏ö‡∏ô-‡∏•‡πà‡∏≤‡∏á"],
    "3-front": ["3 ‡∏ï‡∏±‡∏ß‡∏´‡∏ô‡πâ‡∏≤"],
    "3-back": ["3 ‡∏ï‡∏±‡∏ß‡∏ó‡πâ‡∏≤‡∏¢"],
    "3-straight": ["3 ‡∏ï‡∏±‡∏ß‡∏ï‡∏£‡∏á"],
    "3-tod": ["3 ‡∏ï‡∏±‡∏ß‡πÇ‡∏ï‡πä‡∏î"],
  };

  function setDigitType(type) {
    if (type === "2") {
      numberInput.maxLength = 2;  // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î 2 ‡∏ï‡∏±‡∏ß
      numberInput.placeholder = "‡πÄ‡∏•‡∏Ç 2 ‡∏ï‡∏±‡∏ß";
      typeSelect.disabled = false;
      reverseCheckbox.disabled = false;
    } else {
      numberInput.maxLength = 3;  // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î 3 ‡∏ï‡∏±‡∏ß (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö 3 ‡∏ï‡∏±‡∏ß‡∏´‡∏ô‡πâ‡∏≤/‡∏ó‡πâ‡∏≤‡∏¢)
      numberInput.placeholder =
        type === "3-front" ? "‡πÄ‡∏•‡∏Ç 3 ‡∏ï‡∏±‡∏ß‡∏´‡∏ô‡πâ‡∏≤" :
          type === "3-back" ? "‡πÄ‡∏•‡∏Ç 3 ‡∏ï‡∏±‡∏ß‡∏ó‡πâ‡∏≤‡∏¢" :
            type === "3-straight" ? "‡πÄ‡∏•‡∏Ç 3 ‡∏ï‡∏±‡∏ß‡∏ï‡∏£‡∏á" : "‡πÄ‡∏•‡∏Ç 3 ‡∏ï‡∏±‡∏ß‡πÇ‡∏ï‡πä‡∏î";
      typeSelect.disabled = true;
      reverseCheckbox.disabled = true;
      reverseCheckbox.checked = false;
    }

    numberInput.value = ""; // ‡∏•‡πâ‡∏≤‡∏á‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏Å‡∏£‡∏≠‡∏Å‡πÑ‡∏ß‡πâ‡∏Å‡πà‡∏≠‡∏ô‡∏´‡∏ô‡πâ‡∏≤

    // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÉ‡∏ô typeSelect (‡πÄ‡∏î‡∏¥‡∏°)
    typeSelect.innerHTML = "";
    typeOptions[type].forEach((val) => {
      const option = document.createElement("option");
      option.value = val;
      option.textContent = val;
      typeSelect.appendChild(option);
    });
  }


  digitRadios.forEach((radio) => {
    radio.addEventListener("change", () => {
      setDigitType(radio.value);
    });
  });

  document
    .querySelector('input[name="digitType"]:checked')
    ?.dispatchEvent(new Event("change"));
}


export function setupDigitTypeHighlight() {
  const group = document.getElementById("digitTypeGroup");

  // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö element
  if (!group) {
    console.error("Element with ID 'digitTypeGroup' not found");
    return;
  }

  const labels = group.querySelectorAll("label");

  labels.forEach((label) => {
    const input = label.querySelector("input");
    if (!input) return;

    input.addEventListener("change", () => {
      labels.forEach((lbl) => {
        lbl.classList.remove("bg-indigo-100", "border-indigo-500");
      });
      label.classList.add("bg-indigo-100", "border-indigo-500");
    });

    // ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏ó‡∏±‡∏ô‡∏ó‡∏µ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö input ‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß
    if (input.checked) {
      label.classList.add("bg-indigo-100", "border-indigo-500");
    }
  });
}