import { db } from "./firebase-config.js";
import { doc, getDoc, setDoc } from "https://www.gstatic.com/firebasejs/10.12.0/firebase-firestore.js";
import { fetchLatestLottoResults } from "./lotteryAPI.js";
import { getNextLottoDate } from "./nextLotto-round.js"; // ‚úÖ ‡∏ï‡πâ‡∏≠‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå utils.js ‡πÅ‡∏¢‡∏Å‡∏î‡πâ‡∏ß‡∏¢

// ‡∏ï‡∏£‡∏ß‡∏à‡∏ß‡πà‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏á‡∏ß‡∏î‡∏ô‡∏µ‡πâ‡∏°‡∏µ‡∏´‡∏£‡∏∑‡∏≠‡∏¢‡∏±‡∏á
export async function checkIfRoundExists(date) {
    const ref = doc(db, "lottoLatest", date);
    const snap = await getDoc(ref);
    return snap.exists();
}

export async function saveLottoResultFiltered(data) {
    if (!data || !data.date) {
        console.error("‚ùå ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏£‡∏∑‡∏≠‡∏ü‡∏≠‡∏£‡πå‡πÅ‡∏°‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á");
        return;
    }

    // ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤ data.prizes ‡πÅ‡∏•‡∏∞ data.runningNumbers ‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡πà‡∏≠‡∏ô‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô
    const prizes = Array.isArray(data.prizes) ? data.prizes : [];
    const runningNumbers = Array.isArray(data.runningNumbers) ? data.runningNumbers : [];

    const filtered = {
        date: data.date,
        firstPrize: prizes.find(p => p.id === "prizeFirst")?.number?.[0] || "--",
        threeFront: runningNumbers.find(p => p.id === "runningNumberFrontThree")?.number || [],
        threeBack: runningNumbers.find(p => p.id === "runningNumberBackThree")?.number || [],
        twoDigit: runningNumbers.find(p => p.id === "runningNumberBackTwo")?.number?.[0] || "--",
        isPlaceholder: false,  // ‡πÅ‡∏™‡∏î‡∏á‡∏ß‡πà‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡∏µ‡πâ‡∏Ñ‡∏∑‡∏≠‡∏ú‡∏•‡∏à‡∏£‡∏¥‡∏á
    };

    const ref = doc(db, "lottoLatest", filtered.date);

    // ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡∏ó‡∏±‡∏ö‡πÇ‡∏î‡∏¢‡πÑ‡∏°‡πà‡∏•‡∏ö‡∏ü‡∏¥‡∏•‡∏î‡πå‡∏≠‡∏∑‡πà‡∏ô ‡πÜ ‡πÉ‡∏ô document
    await setDoc(ref, filtered, { merge: true });

    console.log(`‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏á‡∏ß‡∏î ${filtered.date} ‡πÅ‡∏•‡πâ‡∏ß (‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£)`);
}


// ‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡πà‡∏≤‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏á‡∏ß‡∏î‡∏ñ‡∏±‡∏î‡πÑ‡∏õ
export async function createNextRoundIfNotExists(nextDate) {
    const ref = doc(db, "lottoLatest", nextDate);
    const snap = await getDoc(ref);
    if (!snap.exists()) {
        await setDoc(ref, {
            date: nextDate,
            firstPrize: null,
            threeFront: [],
            threeBack: [],
            twoDigit: null,
            isPlaceholder: true, // üîç ‡πÉ‡∏ä‡πâ flag ‡∏ô‡∏µ‡πâ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏¢‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏õ‡∏•‡πà‡∏≤
        });
        console.log(`üìù ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏•‡πà‡∏ß‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏á‡∏ß‡∏î ${nextDate} ‡πÅ‡∏•‡πâ‡∏ß`);
    } else {
        console.log(`‚ÑπÔ∏è ‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏á‡∏ß‡∏î ${nextDate} ‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß`);
    }
}


// ‚úÖ ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÑ‡∏ü‡∏•‡πå‡πÇ‡∏´‡∏•‡∏î
(async () => {
    const data = await fetchLatestLottoResults();
    if (data) {
        const exists = await checkIfRoundExists(data.date);
        if (!exists) {
            await saveLottoResultFiltered(data);
        } else {
            console.log(`‚ÑπÔ∏è ‡∏á‡∏ß‡∏î ${data.date} ‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•`);
        }
    }

    // ‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏á‡∏ß‡∏î‡∏ñ‡∏±‡∏î‡πÑ‡∏õ‡∏•‡πà‡∏ß‡∏á‡∏´‡∏ô‡πâ‡∏≤
    const nextDate = getNextLottoDate();
    await createNextRoundIfNotExists(nextDate);
})();


